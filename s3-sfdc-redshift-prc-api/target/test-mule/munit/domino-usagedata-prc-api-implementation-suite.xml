<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="domino-usagedata-prc-api-implementation-suite.xml" >
		<munit:parameterizations >
			<munit:parameterization name="Default" >
				<munit:parameters >
					<munit:parameter propertyName="s3.usageReportsProcessedFlag" value="true" />
					<munit:parameter propertyName="s3.reconnection.attempts" value="0" />
				</munit:parameters>
			</munit:parameterization>
		</munit:parameterizations>
	</munit:config>
	<munit:test name="domino-usagedata-prc-apiFlow-test" doc:id="c539dbff-16c5-48dc-a840-a2706d0cc5d0">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock fetch usage_details files" doc:id="0c71ffd7-15bc-41fe-8e1f-ad401f396e45" processor="s3:list-objects">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="02944d95-5bfe-454c-bc4c-51a32fd49ef0" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock calling get-file-content-from-s3-sub-flow" doc:id="d6bca414-042d-4fc8-ba61-d4a40fddb21e" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="494ad9f6-6a03-47f7-9a89-574acc288036" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="metricsByDeploymentId" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="file" value="#[output text/csv --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_1.dwl')]" mediaType="text/csv" encoding="UTF-8" />
						<munit-tools:variable key="metricsByAccountId" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sfTarget" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="forEachStart" value="#[output application/java --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="luSfDeployments" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="usageReportMapping" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_6.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="updateResponse" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_7.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="deploymentResponse" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_8.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="accountResponse" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_9.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call-redshift-sys-api" doc:id="6332bc2e-426c-473c-828e-ee92ef496ee0" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a95f4fc3-e469-446a-a874-4b89881576df" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_payload2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="sfTarget" value="#[output application/java --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_10.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="luSfDeployments" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_11.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="usageReportMapping" value="#[output application/json --- readUrl('classpath://dominousagedataprcapiFlowtest\mock_variable_12.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="3492e5a8-353a-40a3-a26f-0e1facc5530a" >
				<munit:payload value="#[readUrl('classpath://dominousagedataprcapiFlowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://dominousagedataprcapiFlowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to domino-usagedata-prc-apiFlow" doc:id="0de6b299-8705-4f38-aa6b-0e1609dc6e41" name="domino-usagedata-prc-apiFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="83575e91-28d0-4b0b-b87f-705981f10e1d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import dominousagedataprcapiFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get-file-content-from-s3-sub-flow-test" doc:id="17122f0a-3b54-4ff4-8089-19e6737b58e1">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Fetch file content using file name" doc:id="38b93588-8111-46dd-993b-d9446f74f895" processor="s3:get-object">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5d0c5a42-f26f-46fe-9c52-06fb2d76afce" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="mock-s3:get-object" />
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Copy Object" doc:id="56b9a9f4-6574-478d-89b7-10916cad6ec4" processor="s3:copy-object">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Copy object" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="132cf762-f8f7-400a-bb4a-bb156d849daa" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Delete Object" doc:id="09b6a4af-46ec-44e0-8f27-ceab97584bcc" processor="s3:delete-object">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Delete object" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="29fa5a26-48bc-406d-918f-da457f50cdac" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- {}]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock calculate-metrics-flow" doc:id="510922ea-29ff-447a-8c33-309f4a2df86d" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8755f76e-7f26-411f-94cd-10a154ff4bae" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_payload3.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Var forEachStart" doc:id="0945999b-2b85-4d30-8294-b0beb18c05da" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="48fdb802-8a55-4f66-a4eb-6d18310f82cd" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="9eb3aef0-2870-4e1b-86f1-64b3d31a8d9c" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:variables >
					<munit:variable key="sfTarget" value="#[output application/java --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_variable_.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="luSfDeployments" value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="usageReportMapping" value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/json" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-file-content-from-s3-sub-flow" doc:id="0ad89ba7-b112-4498-8b28-882f6e8bbb3c" name="get-file-content-from-s3-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f302970c-52e8-4892-b28d-9502d2f21b43" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getfilecontentfroms3subflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<flow name="mock-s3:get-object" doc:id="6a35fa59-d5af-4fba-8628-7d65df773203" >
		<try doc:name="Try" doc:id="486e88ae-3631-485b-bb89-cb59679a12d3" >
			<munit-tools:retrieve doc:name="Retrieve" doc:id="ca1cc6a3-ae25-41f0-924c-d8b9e07280b7" key="Mock Fetch file content using file name"/>
			<error-handler >
				<on-error-continue enableNotifications="false" logException="false" doc:name="On Error Continue" doc:id="b2b4cede-f260-4dd2-8809-1736a70eaba9" type="ANY">
					<set-payload value="#[1]" doc:name="Set Payload" doc:id="62ace41f-45a6-4790-8fe6-70472072c263" />
				</on-error-continue>
			</error-handler>
		</try>
		<munit-tools:store doc:name="Store" doc:id="7b8be5d2-bfa4-4c40-b00a-5a8c9ce5e646" key="Mock Fetch file content using file name">
			<munit-tools:value ><![CDATA[#[payload + 1]]]></munit-tools:value>
		</munit-tools:store>
		<choice doc:name="Choice" doc:id="389a3f0d-cf7a-48ff-af94-0efd9bdd1284" >
			<when expression="#[payload == 1]">
				<munit:set-event doc:name="Set Event" doc:id="b11ffcc3-294d-4fd4-8112-758c1a13b5e2" >
					<munit:payload value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variables >
						<munit:variable key="rootMessage" value="#[readUrl('classpath://getfilecontentfroms3subflowtest\mock_variable_.dwl')]" />
						<munit:variable key="file" value="#[output text/csv --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_variable_1.dwl')]" encoding="UTF-8" mediaType="text/csv" />
						<munit:variable key="sfTarget" value="#[output application/java --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_variable_2.dwl')]" encoding="UTF-8" mediaType="application/java" />
						<munit:variable key="forEachStart" value="#[output application/java --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_variable_3.dwl')]" encoding="UTF-8" mediaType="application/java" />
						<munit:variable key="luSfDeployments" value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_variable_4.dwl')]" encoding="UTF-8" mediaType="application/json" />
						<munit:variable key="usageReportMapping" value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_variable_5.dwl')]" encoding="UTF-8" mediaType="application/json" />
						<munit:variable key="counter" value="#[readUrl('classpath://getfilecontentfroms3subflowtest\mock_variable_6.dwl')]" />
					</munit:variables>
				</munit:set-event>
			</when>
			<otherwise >
				<munit-tools:fail doc:name="Fail" doc:id="354c64ae-4872-49e1-b0d2-ccb90067b938" message="There are no more events to mock"/>
			</otherwise>
		</choice>
	</flow>
	<munit:test name="calculate-metrics-sub-flow-test" doc:id="658d3f72-ea6b-498c-bf4f-aeade49da2d0">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock DW to calculate usage metrics from runtime properties for Account Obj" doc:id="268d5532-c95d-4907-a925-4533cea14bb0" processor="ee:dynamic-evaluate">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="33979a24-7674-47e0-a073-a236850455d9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="metricsByAccountId" value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock DW to calculate usage metrics from runtime properties for Deployment Obj" doc:id="ad22e3dc-92ed-4c52-938d-a45be0c5276e" processor="ee:dynamic-evaluate">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="f31fbc29-544f-4f24-834a-7a847dae545c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="metricsByDeploymentId" value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="metricsByAccountId" value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call-salesforce-sys-api" doc:id="0693ef6f-0582-42e0-8dad-d8e109cd96f2" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="df610000-519b-4166-9b07-03d129750154" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://calculatemetricssubflowtest\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://calculatemetricssubflowtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="metricsByDeploymentId" value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="metricsByAccountId" value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to calculate-metrics-sub-flow" doc:id="29100a73-3be6-4a03-ad70-7ce7d9548be7" name="calculate-metrics-sub-flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload" doc:id="609bc1b3-280c-4a88-bb34-39a641213f42" message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import calculatemetricssubflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="calculate-metrics-sub-flow-negative-test" doc:id="04872665-c8d8-456b-872a-89c77f8f6eae">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock DW to calculate usage metrics from runtime properties for Account Obj" doc:id="129d9758-67a3-4c36-bd51-37f380449628" processor="ee:dynamic-evaluate">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="33979a24-7674-47e0-a073-a236850455d9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="metricsByAccountId" value="#[output application/json ---[]]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="metricsByDeploymentId" value="#[output application/json ---[]]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock DW to calculate usage metrics from runtime properties for Deployment Obj" doc:id="5e1a42ff-e11a-4e00-93b7-7e6252ba2f89" processor="ee:dynamic-evaluate">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="f31fbc29-544f-4f24-834a-7a847dae545c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="metricsByDeploymentId" value="#[output application/json ---[]]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="metricsByAccountId" value="#[output application/json --- []]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock HTTP Request to update salesforce interface-logs for account" doc:id="a7a752ce-6749-4681-8cab-17dc42230e88" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="816e0cdf-1bbf-435a-ad16-5b0c75f23815" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_payload3.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock HTTP Request to update salesforce interface-logs for deployment" doc:id="52c123ca-e12c-465f-b5d7-b4571dcdbcbe" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6c89225f-8ad7-4104-8016-e64a4805a5df" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_payload3.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock call-salesforce-sys-api" doc:id="cc92a0a0-7f4b-42dc-b87a-6ea54b7cfd0a" processor="flow-ref">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="df610000-519b-4166-9b07-03d129750154" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://calculatemetricssubflowtest\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://calculatemetricssubflowtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="metricsByDeploymentId" value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="metricsByAccountId" value="#[output application/json --- readUrl('classpath://calculatemetricssubflowtest\mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to calculate-metrics-sub-flow" doc:id="b317756a-6e78-4047-bb93-2d7cce9d5ca8" name="calculate-metrics-sub-flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert expression" doc:id="58262d06-a82c-497e-bd24-391e36c6ea7a" />
		</munit:validation>
	</munit:test>
	<munit:test name="domino-usagedata-prc-apiFlow-negative-test-MULE" doc:id="d9f62926-5149-403e-afda-8cde4ea395d5">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock fetch usage_details files" doc:id="3c573abd-2a4e-4fd0-a945-fc4a16d0dd6e" processor="s3:list-objects">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="02944d95-5bfe-454c-bc4c-51a32fd49ef0" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="CRITICAL:FATAL_JVM_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="14190129-07f4-4894-8727-99815c553506">
				<flow-ref doc:name="Flow Reference to domino-usagedata-prc-apiFlow" doc:id="9d0b1018-43ba-41d7-af90-b7ef2a5df604" name="domino-usagedata-prc-apiFlow" />
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="633f6e8e-ce5f-4621-b7a4-82abd2ca21e9" />
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="bed177ca-461c-4298-bcdc-c553ff248cb6" actual="#[payload]" expected='#[""]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="domino-usagedata-prc-apiFlow-negative-test-S3" doc:id="9a841135-32d4-42b4-bfb1-b6c2c431756c">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock fetch usage_details files" doc:id="7f96fb3f-aba5-4853-8350-925073de85a9" processor="s3:list-objects">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="fetch usage_details files" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="02944d95-5bfe-454c-bc4c-51a32fd49ef0" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Amazon_S3_Configuration_DDL" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="dw-test-domino" attributeName="bucketName" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="S3:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="21222587-0ea0-4591-a0b0-5121717bc58d" processor="until-successful">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a548ea1f-ae40-4150-afc0-0c95bc526e5b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="S3:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock HTTP Request to update salesforce interface-logs for account" doc:id="530841e5-c89b-4d05-9d84-89837ab075a7" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="92cc0bbe-3017-4c0a-9a72-fb4125ed2f2a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://callsalesforcesysapitest\mock_payload3.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock HTTP Request to update salesforce interface logs for deployment" doc:id="e0842948-b124-4a80-b193-fb3483a7808e" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6e045694-7953-49da-950a-e9f7efd0aefc" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://callsalesforcesysapitest\mock_payload3.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="c2efbd60-c777-4201-bd31-8df06ba97ad1">
				<flow-ref doc:name="Flow Reference to domino-usagedata-prc-apiFlow" doc:id="50d42940-ef5d-4493-8ff3-56900414e72e" name="domino-usagedata-prc-apiFlow" />
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="867808ef-8114-4946-8961-77ad4145233c" />
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert expression" doc:id="f458cfd2-a989-41ac-a2f9-fb02e80aef83" />
		</munit:validation>
	</munit:test>
<munit:test name="get-file-content-from-s3-sub-flow-negative-test-S3" doc:id="85ed7fe7-121e-4497-8891-20b3237ca51b">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Fetch file content using file name" doc:id="bd82d7de-fb77-4b90-b24f-394fc21c064b" processor="s3:get-object">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5d0c5a42-f26f-46fe-9c52-06fb2d76afce" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="mock-s3:get-object" />
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock calculate-metrics-flow" doc:id="acfba1e1-c4c9-43e6-8059-4b127d8edd1a" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8755f76e-7f26-411f-94cd-10a154ff4bae" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\mock_payload3.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Var forEachStart" doc:id="f1df9005-8739-4be2-94a8-83d8051f50f7" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="48fdb802-8a55-4f66-a4eb-6d18310f82cd" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock HTTP Request to update salesforce interface-logs for account" doc:id="fafd3af6-b08c-414e-9e80-5cf3c0508dfe" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="HTTP Request to update salesforce interface-logs for account" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="3e52f903-a89f-4126-83a4-80547601b3b1" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://callsalesforcesysapitest\mock_payload3.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock HTTP Request to update salesforce interface logs for deployment" doc:id="373c5ec6-9ff0-4504-a603-69d8d782c7d2" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="HTTP Request to update salesforce interface-logs for deployment" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="8abaa4f8-997a-4a33-b555-c2ff6967ebef" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://callsalesforcesysapitest\mock_payload3.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			
			<munit:set-event doc:name="Set Input" doc:id="4d5d2110-2e88-4dfc-a2f4-522d36321f7b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:variables >
					<munit:variable key="sfTarget" value="#[output application/java --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_variable_.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="luSfDeployments" value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="usageReportMapping" value="#[output application/json --- readUrl('classpath://getfilecontentfroms3subflowtest\set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/json" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-file-content-from-s3-sub-flow" doc:id="b2af7db6-7283-4f18-9e1f-f2e21422534d" name="get-file-content-from-s3-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c7d38747-75eb-40eb-90f5-d035ae4d022e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getfilecontentfroms3subflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

</mule>
